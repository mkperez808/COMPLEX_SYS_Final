/// COMPONENTS ////////////////////////////////////////////////////////////////

[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cWaveSource
;;; framing
instance[frame50].type=cFramer
;;; intensity
instance[int].type=cIntensity
;;; pitch
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmp].type=cFFTmagphase
instance[acf].type=cAcf
instance[cepstrum].type=cAcf
instance[pitchACF].type=cPitchACF
;;; jitter
instance[pitchJitter].type=cPitchJitter
;;; smooth
instance[smo1].type=cContourSmoother
;;; functionals
instance[functL1].type=cFunctionals
;;; output
instance[csvsink].type=cCsvSink
printLevelStats=0
nThreads=1


/// Input /////////////////////////////////////////////////////////////////////

[waveIn:cWaveSource]
writer.dmLevel=wave
filename=\cm[inputfile(I){test.wav}:name of input file]
buffersize = 4000
monoMixdown=1


/// LLDs  /////////////////////////////////////////////////////////////////////


;;;;;;;;;;;;; Framing ;;;;;;;;;;;;;;;;;;;;

[frame50:cFramer]
reader.dmLevel=wave
writer.dmLevel=frame50
copyInputName = 1
noPostEOIprocessing = 1
frameSize = 0.050
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = left
buffersize = 4000


;;;;;;;;;;;;; Intensity ;;;;;;;;;;;;;;;;;;;;

[int:cIntensity]
reader.dmLevel = frame50
writer.dmLevel = intens
// nameAppend =
copyInputName = 1
processArrayFields = 1
intensity = 1
loudness = 0


;;;;;;;;;;;;; Pitch ;;;;;;;;;;;;;;;;;;;;

[win:cWindower]
reader.dmLevel=frame50
writer.dmLevel=win
winFunc=gauss
gain=1.0
sigma=0.4

[fft:cTransformFFT]
reader.dmLevel=win
writer.dmLevel=fftc
 ; for compatibility with 2.2.0 and older versions

[fftmp:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag

[acf:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=acf
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 0

[cepstrum:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=cepstrum
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 1

[pitchACF:cPitchACF]
  ; the pitchACF component must ALWAYS read from acf AND cepstrum in the given order!
reader.dmLevel=acf;cepstrum
writer.dmLevel=pitch
copyInputName = 1
processArrayFields=0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 1
F0 = 1
F0raw = 1
F0env = 0
voicingCutoff = 0.450000


;;;;;;;;;;;;; Jitter ;;;;;;;;;;;;;;;;;;;;

[pitchJitter:cPitchJitter]
reader.dmLevel = wave
writer.dmLevel = jitter
// nameAppend =
copyInputName = 1
F0reader.dmLevel = pitch
F0field = F0raw
searchRangeRel = 0.250000
jitterLocal = 1
jitterDDP = 1
jitterLocalEnv = 1
jitterDDPEnv = 1
shimmerLocal = 1
shimmerLocalEnv = 1
onlyVoiced = 0
;periodLengths = 0
;periodStarts = 0
inputMaxDelaySec = 1
usePeakToPeakPeriodLength = 0
shimmerUseRmsAmplitude = 0
minCC = 0.5
minNumPeriods = 2


;;;;;;;;;;;;; smoothing ;;;;;;;;;;;;;;;;;;;;

[smo1:cContourSmoother]
reader.dmLevel=pitch;jitter;intens
writer.dmLevel=lld_1
writer.levelconf.nT=10
;writer.levelconf.noHang=2
writer.levelconf.isRb=0
writer.levelconf.growDyn=1
nameAppend = sma
copyInputName = 1
noPostEOIprocessing = 0
smaWin = 3


/// Functionals ///////////////////////////////////////////////////////////////

[functL1:cFunctionals]
reader.dmLevel=lld_1
writer.dmLevel=func
copyInputName = 1
 ; frameSize and frameStep = 0 => functionals over complete input
 ; (NOTE: buffersize of lld and lld_de levels must be large enough!!)
frameSize = 0
frameStep = 0
frameMode = full
frameCenterSpecial = left
masterTimeNorm = frame
nonZeroFuncts = 1
functionalsEnabled=Extremes;Regression;Moments;Means;Times
Means.amean = 1
Means.absmean = 0
Means.qmean = 0
Means.nzamean = 0
Means.nzabsmean = 0
Means.nzqmean = 0
Means.nzgmean = 0
Means.nnz = 1
Means.norm = frame
Extremes.max = 1
Extremes.min = 1
Extremes.range = 0
Extremes.maxpos = 0
Extremes.minpos = 0
Extremes.amean = 0
Extremes.maxameandist = 0
Extremes.minameandist = 0
 ; Note: the much better way to normalise the times of maxpos and minpos
 ; is 'turn', however for compatibility with old files the default 'frame'
 ; is kept here:
Extremes.norm = frame
Regression.linregc1 = 1
Regression.linregc2 = 0
Regression.linregerrA = 1
Regression.linregerrQ = 0
Regression.qregc1 = 0
Regression.qregc2 = 0
Regression.qregc3 = 0
Regression.qregerrA = 0
Regression.qregerrQ = 0
Regression.centroid = 0
Moments.variance = 0
Moments.stddev = 1
Moments.skewness = 0
Moments.kurtosis = 0
Moments.amean = 0
Times.duration = 1
Times.norm = frame
Times.downleveltime = 0
Times.upleveltime = 0
Times.rightctime = 0
Times.leftctime = 0
Times.falltime = 0
Times.risetime = 0
Times.downleveltime90 = 0
Times.upleveltime90 = 0
Times.downleveltime75 = 0
Times.upleveltime75 = 0
Times.downleveltime50 = 0
Times.upleveltime50 = 0
Times.downleveltime25 = 0
Times.upleveltime25 = 0


/// Output ////////////////////////////////////////////////////////////////////

[csvsink:cCsvSink]
reader.dmLevel=func
delimChar = ,
frameIndex = 0
frameTime = 1
filename = \cm[outputfile(O):file name of the output CSV file]
